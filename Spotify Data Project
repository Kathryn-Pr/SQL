-- # For this project I downloaded Spotify data from Kaggle. --
-- # Then I created a table to insert the Spotify data into. --
-- # Finally, I performed analytics on the data using SQL. --


-- # Creating the table: --
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


-- # Then I inserted the Spotify Data .csv into the table. --

-- # Next, I explored the data using the following SQL. --

SELECT * FROM Spotifydata

-- # First I determined the who the top ten artists are by popularity. --
SELECT track_name, artist_name, popularity FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10

-- # Then I determined the average danceability, popularity, and energy by artist and track. --
SELECT artist_name,track_name, AVG(danceability), AVG(popularity), AVG(energy)
FROM Spotifydata
GROUP BY artist_name, track_name
ORDER BY AVG(danceability) DESC

-- # Then I determined the top ten highest energy artists. --
SELECT artist_name, AVG(energy) FROM Spotifydata
GROUP BY artist_name
ORDER BY AVG(energy) DESC
LIMIT 10

-- # Then I determined the popularity of the artists. --
SELECT artist_name, AVG(popularity)
FROM Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) DESC

-- # Then I queried the temp and energy of each artist. --
SELECT artist_name, AVG(tempo), AVG(energy)
FROM Spotifydata
GROUP BY artist_name
ORDER BY AVG(tempo)

-- # Then I determined the artist with the longest song. --
SELECT artist_name, track_name, duration_ms
FROM Spotifydata
ORDER BY duration_ms DESC
LIMIT 1
